name: Build OB image

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      arch:
        description: 'The architecture to build (aarch64, armhf, armv7, amd64 or i386)'
        default: 'aarch64'
        required: true
        type: string
      machine:
        description: 'The machine to build (generic-x86-64, intel-nuc, khadas-vim3, odroid-c2, odroid-c4, odroid-n2, odroid-xu, qemuarm, qemuarm-64, qemux86, qemux86-64, raspberrypi, raspberrypi2, raspberrypi3, raspberrypi3-64, raspberrypi4, raspberrypi4-64, tinker, yellow)'
        default: 'raspberrypi4-64'
        required: true
        type: string
      version:
        description: 'The version to publish'
        required: true
        type: string
      channel:
        description: 'The channel to publish to'
        default: 'dev'
        required: true
        type: string
env:
  BUILD_TYPE: core
  DEFAULT_PYTHON: 3.9

jobs:
  build_base:
    name: Build ${{ inputs.arch }} base core image
    if: github.repository_owner == 'oceanbuilders'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.0.2

      - name: Download nightly wheels of frontend
        # if: inputs.channel == 'dev'
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          repo: oceanbuilders/frontend
          branch: dev
          workflow: ob-nightly.yaml
          workflow_conclusion: success
          name: wheels

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        # if: inputs.channel == 'dev'
        uses: actions/setup-python@v4.1.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Write meta info file
        shell: bash
        run: |
          echo "${{ github.sha }};${{ github.ref }};${{ github.event_name }};${{ github.actor }}" > rootfs/OFFICIAL_IMAGE

      # - name: Login to DockerHub
      #   uses: docker/login-action@v2.0.0
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build base image
        uses: home-assistant/builder@2022.07.0
        with:
          args: |
            $BUILD_ARGS \
            --${{ inputs.arch }} \
            --target /data \
            --generic ${{ inputs.version }}
        # env:
        #   CAS_API_KEY: ${{ secrets.CAS_TOKEN }}

  build_machine:
    name: Build ${{ inputs.machine }} machine core image
    if: github.repository_owner == 'oceanbuilders'
    needs: "build_base"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.0.2

      - name: Set build additional args
        run: |
          # Create general tags
          if [[ "${{ inputs.version }}" =~ d ]]; then
            echo "BUILD_ARGS=--additional-tag dev" >> $GITHUB_ENV
          elif [[ "${{ inputs.version }}" =~ b ]]; then
            echo "BUILD_ARGS=--additional-tag beta" >> $GITHUB_ENV
          else
            echo "BUILD_ARGS=--additional-tag stable" >> $GITHUB_ENV
          fi
      # - name: Login to DockerHub
      #   uses: docker/login-action@v2.0.0
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build base image
        uses: home-assistant/builder@2022.07.0
        with:
          args: |
            $BUILD_ARGS \
            --target /data/machine \
            --machine "${{ inputs.version }}=${{ inputs.machine }}"
        # env:
        #   CAS_API_KEY: ${{ secrets.CAS_TOKEN }}
